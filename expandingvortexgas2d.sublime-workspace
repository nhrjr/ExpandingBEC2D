{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"omega",
				"omega_y"
			],
			[
				"omeg",
				"omega_y"
			],
			[
				"wave",
				"wavefctVec"
			],
			[
				"snapo",
				"snapshotTmp"
			],
			[
				"sn",
				"snapshotTmp"
			],
			[
				"reus",
				"results"
			],
			[
				"binar",
				"binaryFile"
			],
			[
				"Ma",
				"MatrixXcd"
			],
			[
				"Matr",
				"matrixData"
			],
			[
				"coor",
				"coordinateBoundaries"
			],
			[
				"h5_EM",
				"h5_EMGroup_vecsub"
			],
			[
				"state",
				"stateOfLoops"
			],
			[
				"windig",
				"windingnumber"
			],
			[
				"counter",
				"counter_max"
			],
			[
				"pre",
				"previousTimes"
			],
			[
				"count",
				"counter_max"
			],
			[
				"zer",
				"zeroDensity"
			],
			[
				"r_min",
				"r_min_phi"
			],
			[
				"r_max",
				"r_max_phi"
			],
			[
				"surroun",
				"surroundDens"
			],
			[
				"snap",
				"snapshot_times"
			],
			[
				"Edg",
				"EDGE_RANGE_CHECK"
			],
			[
				"num",
				"numberOfEdgePoints"
			],
			[
				"th",
				"threshold"
			],
			[
				"VOr",
				"VORTEX_SURROUND_DENSITY_RADIUS"
			],
			[
				"VOR",
				"VORTEX_SURROUND_DENSITY_RADIUS"
			],
			[
				"VO",
				"VORTEX_SURROUND_DENSITY_RADIUS"
			],
			[
				"V",
				"VORTEX_SURROUND_DENSITY_RADIUS"
			],
			[
				"phase",
				"phase_winding"
			],
			[
				"exp",
				"expException"
			],
			[
				"string",
				"stringException"
			],
			[
				"exce",
				"exception"
			],
			[
				"check",
				"checkEdges"
			],
			[
				"om",
				"omega_y"
			],
			[
				"plotDat",
				"plotDataToPng"
			],
			[
				"plot",
				"plotDataToPng"
			],
			[
				"plo",
				"plotVector"
			],
			[
				"extern",
				"external_snapshot_time"
			],
			[
				"dens",
				"densY"
			],
			[
				"den",
				"dens_y"
			],
			[
				"to",
				"to_string"
			],
			[
				"y_",
				"y_max"
			],
			[
				"x",
				"x_max"
			],
			[
				"divi",
				"divisor_counter"
			],
			[
				"cData",
				"cData1"
			],
			[
				"it",
				"iterator"
			],
			[
				"contour",
				"contourData"
			],
			[
				"cont",
				"contourData"
			],
			[
				"exter",
				"external_runname"
			],
			[
				"number",
				"numberOfVortices"
			],
			[
				"sur",
				"surroundDens"
			],
			[
				"p",
				"polarDensity"
			],
			[
				"max",
				"max_radius"
			],
			[
				"Vorte",
				"VortexData"
			],
			[
				"make",
				"make_vector"
			],
			[
				"v",
				"v_right"
			],
			[
				"densi",
				"densityLocationMap_local"
			],
			[
				"break",
				"break_condition"
			],
			[
				"find",
				"findMostRightP"
			],
			[
				"inser",
				"insert_counter"
			],
			[
				"min",
				"min_y"
			],
			[
				"a",
				"a"
			],
			[
				"size",
				"size"
			],
			[
				"y_d",
				"y_dist_grad"
			],
			[
				"y",
				"y_dist_grad"
			],
			[
				"x_di",
				"x_dist_grad"
			],
			[
				"ang",
				"angularDensity"
			],
			[
				"angul",
				"angularDensity"
			],
			[
				"AVER",
				"ANGULAR_AVERAGING_LENGTH"
			],
			[
				"angua",
				"angularDensity_tmp"
			],
			[
				"DA",
				"OBSERVABLES_DATA_POINTS_SIZE"
			],
			[
				"angularDen",
				"angularDensity_tmp"
			],
			[
				"density",
				"densityCoordinates"
			],
			[
				"runname",
				"runname_external"
			],
			[
				"jump",
				"jump_y"
			],
			[
				"ju",
				"jump_x"
			],
			[
				"jum",
				"jump_y"
			],
			[
				"angu",
				"angularDensity"
			],
			[
				"beg",
				"beginning"
			],
			[
				"M",
				"M_PI"
			],
			[
				"Co",
				"Coordinate"
			],
			[
				"C",
				"Coordinate"
			],
			[
				"polar",
				"polarDensity"
			],
			[
				"scale",
				"scale_factor"
			],
			[
				"totla",
				"totalResult"
			],
			[
				"par",
				"particle_count"
			],
			[
				"int",
				"int32_t"
			],
			[
				"name",
				"namespace"
			],
			[
				"de",
				"density_grad_x"
			],
			[
				"lambda",
				"lambda_y"
			],
			[
				"lam",
				"lambda_x"
			],
			[
				"totl",
				"totalResult"
			],
			[
				"cli",
				"cli_plot"
			],
			[
				"tot",
				"totalResult"
			],
			[
				"snapshot",
				"snapshot_time"
			],
			[
				"av",
				"avResult"
			],
			[
				"eva",
				"evaluate"
			],
			[
				"ome",
				"omega_x"
			],
			[
				"pathop",
				"pathopt"
			],
			[
				"opt",
				"opt"
			],
			[
				"loo",
				"lookupValue"
			],
			[
				"ab",
				"absoluteSteps"
			],
			[
				"Matrix",
				"MatrixXcd"
			],
			[
				"Matri",
				"MatrixXcd"
			],
			[
				"stat",
				"stateOfLoops"
			],
			[
				"total",
				"totalstate"
			],
			[
				"trea",
				"threadinfo"
			],
			[
				"omp",
				"omp_get_thread_num"
			],
			[
				"omp_",
				"omp_set_num_threads"
			],
			[
				"sta",
				"stateOfLoops"
			],
			[
				"wae",
				"wavefct"
			],
			[
				"S",
				"SAMPLESIZE"
			],
			[
				"k",
				"kwidth2"
			],
			[
				"cli_",
				"cli_itp"
			],
			[
				"set",
				"setOptions"
			],
			[
				"RTE",
				"RTE_step"
			],
			[
				"numb",
				"numberval"
			],
			[
				"siz",
				"sizeofvalues"
			],
			[
				"bh3",
				"Bh3Evaluation"
			],
			[
				"ini",
				"init_k_space"
			],
			[
				"gauss",
				"gauss_random"
			],
			[
				"Copy",
				"CopyEigenToComplexGrid"
			],
			[
				"Cop",
				"CopyComplexGridToEigen"
			],
			[
				"wavef",
				"wavefctcp"
			],
			[
				"ITP",
				"ITPpotential"
			],
			[
				"MAtrix",
				"MatrixXcd"
			],
			[
				"wace",
				"wavefctcp"
			],
			[
				"Y",
				"Ypotential"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Searching 2932 files for \"opt.name\" (case sensitive)\n\n/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_propagators.cpp:\n  157  			if(plot == true)\n  158  				{\n  159: 					opt.name = name; //+ \"-\" + std::to_string(counter_state/(counter_max/100));\n  160  					// plotdatatopng(pPsi,opt);\n  161  					plotdatatopngEigen(wavefct,opt);\n  ...\n  164  					// CopyEigenToComplexGrid();\n  165  					// ComplexGrid::fft(*pPsi,*pK,true);\n  166: 					// opt.name = \"kvalues -\" + std::to_string(counter_state/(counter_max/100));\n  167  					// plotdatatopng(pK,opt);\n  168  \n  ...\n  217  \n  218  void EXP2D::plot_rte(string name,int counter_state, int counter_max){\n  219: opt.name = name + \"-\" + std::to_string(counter_state/(counter_max/100));\n  220  \n  221  plotdatatopngEigenExpanding(wavefct,ranges,Xexpanding,Yexpanding,opt);\n\n/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_rte.cpp: \n  141  // 			if(plot == true)\n  142  // 				{\n  143: // 					opt.name = name; //+ \"-\" + std::to_string(counter_state/(counter_max/100));\n  144  // 					// plotDataToPng(pPsi,opt);\n  145  // 					plotDataToPngEigen(wavefct,opt);\n  ...\n  148  // 					// CopyEigenToComplexGrid();\n  149  // 					// ComplexGrid::fft(*pPsi,*pK,true);\n  150: // 					// opt.name = \"kvalues -\" + std::to_string(counter_state/(counter_max/100));\n  151  // 					// plotDataToPng(pK,opt);\n  152  \n  ...\n  208  \n  209  void RTE::plot(string name,int counter_state, int counter_max){\n  210: 	opt.name = name;\n  211  	wavefct = wavefctVec[0];\n  212  \n\n/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/main.h:\n  161  	cfg.lookupValue(\"RunOptions.workingfile\",opt.workingfile);\n  162  	cfg.lookupValue(\"RunOptions.runmode\",opt.runmode);\n  163: 	// opt.name\n  164  \n  165  	double exp_factor        = root[\"RunOptions\"][\"exp_factor\"];\n  ...\n  190  	opt.scale_factor = 0; //Scale factor\n  191  	opt.t_abs = complex<double>(0,0); //Absolute time \n  192: 	opt.name       = \"run\";\n  193  	opt.stateInformation.resize(2);\n  194  	opt.stateInformation[0] = 1;\n\n/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/plot_with_mgl.cpp:\n  591  	gr.SetSize(1800,1800);\n  592  	gr.SetQuality(3);\n  593: 	gr.Title(opt.name.c_str());\n  594  	// gr.Alpha(true);\n  595  \n  ...\n  597  \n  598  	// data.use_abs=false;\n  599: 	// string filename = \"PHASE-\" + opt.name + \".png\";\n  600  \n  601  	// gr.SetRange('z',data);\n  ...\n  618  \n  619  	data.use_abs=true;\n  620: 	string filename = opt.name + \"-Density-Expanding.png\";\n  621  	gr.SetRange('z',data);\n  622  	// gr.SetRange('c',data);\n  ...\n  676  		// gr.Alpha(true);\n  677  \n  678: 	string filename = opt.name + \"-Density-Expanding.png\";\n  679  \n  680  	gr.SetSize(1800,1800);\n  681  	gr.SetQuality(3);\n  682: 	gr.Title(opt.name.c_str());\n  683  	gr.SetRange('x',xaxis);\n  684  	gr.SetRange('y',yaxis);\n\n/home/nhrjr/projects/expandingvortexgas2d/main.cpp:\n   71  // set the datafile identifier name and save the initial grid\n   72  \n   73: opt.name = \"INIT\";\n   74: plotDataToPng(opt.name,data,opt);\n   75  \n   76  //====> Imaginary Time Propagation (ITP)\n   77  itprun->propagateToGroundState(\"ITP1\");\n   78: opt.name = \"ITP1\";\n   79: plotDataToPng(opt.name,data,opt);\n   80  \n   81  \n   ..\n  117  //====> Imaginary Time Propagation (ITP)\n  118  itprun->formVortices(\"ITP2\");\n  119: opt.name = \"ITP2\";\n  120: plotDataToPng(opt.name,data,opt);\n  121  // saveDataToHDF5(data,opt);\n  122  \n\n19 matches across 5 files\n",
			"settings":
			{
				"buffer_size": 3437,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "exp_utilities/EXP2D_rte.hpp",
			"settings":
			{
				"buffer_size": 3410,
				"line_ending": "Unix"
			}
		},
		{
			"file": "exp_utilities/EXP2D_rte.cpp",
			"settings":
			{
				"buffer_size": 21175,
				"line_ending": "Unix"
			}
		},
		{
			"file": "results/run.cfg",
			"settings":
			{
				"buffer_size": 863,
				"line_ending": "Unix"
			}
		},
		{
			"file": "exp_utilities/EXP2D_binaryfile.h",
			"settings":
			{
				"buffer_size": 7699,
				"line_ending": "Unix"
			}
		},
		{
			"file": "exp_utilities/EXP2D_binaryfile.cpp",
			"settings":
			{
				"buffer_size": 20567,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main.cpp",
			"settings":
			{
				"buffer_size": 5567,
				"line_ending": "Unix"
			}
		},
		{
			"file": "evaluator.cpp",
			"settings":
			{
				"buffer_size": 2936,
				"line_ending": "Unix"
			}
		},
		{
			"file": "exp_utilities/EXP2D_evaluation.cpp",
			"settings":
			{
				"buffer_size": 22942,
				"line_ending": "Unix"
			}
		},
		{
			"file": "exp_utilities/EXP2D_Contour.cpp",
			"settings":
			{
				"buffer_size": 5662,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/cmake.sublime-build",
	"command_palette":
	{
		"height": 117.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"",
				"AlignTab: Table Mode"
			],
			[
				"algin",
				"AlignTab"
			],
			[
				"align",
				"AlignTab"
			],
			[
				"linter",
				"SublimeLinter: Enable Linting"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"disable linting",
				"SublimeLinter: Disable Linting"
			],
			[
				"package remove",
				"Package Control: Remove Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"Clang",
				"SublimeLinter: Create Linter Plugin"
			],
			[
				"Package dis",
				"Package Control: Disable Package"
			],
			[
				"Enable",
				"Package Control: Enable Package"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"package remove ",
				"Package Control: Remove Package"
			],
			[
				"Install ",
				"Package Control: Install Package"
			],
			[
				"Linter Settings",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"Linter",
				"Preferences: SublimeLinter Settings – Default"
			],
			[
				"Package install",
				"Package Control: Install Package"
			],
			[
				"clang",
				"Package Control: Enable Package"
			],
			[
				"git",
				"Package Control: Install Package"
			],
			[
				"al",
				"AlignTab"
			],
			[
				"Align",
				"Preferences: Alignment Key Bindings – Default"
			],
			[
				"Destro",
				"Origami: Destroy Pane on the Right"
			],
			[
				"destro p",
				"Origami: Destroy Pane on the Right"
			],
			[
				"origami move",
				"Origami: Move File to Pane on the Left"
			],
			[
				"Brow",
				"Browse Mode..."
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"quic",
				"File: Quick File Open"
			],
			[
				"OPen file",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"Synb",
				"Set Syntax: Objective-C++"
			],
			[
				"INstall",
				"Package Control: Install Package"
			],
			[
				"Pack",
				"Package Control: Install Package"
			],
			[
				"Packa",
				"Package Control: Install Package"
			],
			[
				"Package Control In",
				"Package Control: Install Package"
			]
		],
		"width": 521.0
	},
	"console":
	{
		"height": 145.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/main.h",
		"/home/nhrjr/projects/expandingvortexgas2d/CMakeLists.txt",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_itp.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/tester.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_tools.h",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_Contour.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/tester.h",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/bh3binaryfile_new.h",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/bh3binaryfile_new.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/bh3binaryfile.h",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/coordinate.h",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/plot_with_mgl.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_observables.h",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_rte.hpp",
		"/home/nhrjr/projects/expandingvortexgas2d/results/run.cfg",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_evaluation.h",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_evaluation.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/startgrids/bh3defaultgrid.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/plot_with_mgl.h",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_tools.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_rte.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_Contour.h",
		"/home/nhrjr/projects/expandingvortexgas2d/main.cpp",
		"/home/nhrjr/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/nhrjr/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/nhrjr/Downloads/Guitest10.py",
		"/home/nhrjr/Downloads/embedding_in_tk.py",
		"/home/nhrjr/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/nhrjr/Downloads/Guitest9.py",
		"/home/nhrjr/projects/expandingvortexgas2d/TODO",
		"/home/nhrjr/.config/awesome/rc.lua",
		"/home/nhrjr/.config/sublime-text-3/Packages/User/Colorsublime.sublime-settings",
		"/home/nhrjr/.config/sublime-text-3/Packages/Solarized Toggle/SolarizedToggle.sublime-settings",
		"/home/nhrjr/.config/sublime-text-3/Packages/User/SolarizedToggle.sublime-settings",
		"/home/nhrjr/projects/expandingvortexgas2d/observables/bh3observables.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/observables/bh3observables.h",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/realgrid.h",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/realgrid.cpp",
		"/etc/X11/xorg.conf",
		"/var/log/Xorg.0.log",
		"/home/nhrjr/.config/monitors.xml",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_observables.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/startgrids/bh3defaultgrid.h",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_itp.hpp",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_observable.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/.gitignore",
		"/home/nhrjr/projects/expandingvortexgas2d/resources/exp2d-obs-line-of-codes.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/complexgrid.h.gch",
		"/home/nhrjr/projects/expandingvortexgas2d/expandingvortexgas2d.sublime-project",
		"/home/nhrjr/projects/expandingvortexgas2d/startgrids/Makefile~",
		"/home/nhrjr/projects/expandingvortexgas2d/observables/Makefile~",
		"/home/nhrjr/projects/expandingvortexgas2d/plotter.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/openquestions.txt",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_propagators.h",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/EXP2D_propagators.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/2dexpan.h",
		"/home/nhrjr/projects/expandingvortexgas2d/startgrids/bh3defaultgrid.cpp~",
		"/home/nhrjr/projects/expandingvortexgas2d/resources/bh3myanalyzerun.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/results/test-observables-own-6/runparameters.txt",
		"/home/nhrjr/projects/expandingvortexgas2d/results/test-observables-own-3/spectrum0.dat",
		"/home/nhrjr/projects/expandingvortexgas2d/observables/bh3save.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/complexgrid.h",
		"/home/nhrjr/projects/expandingvortexgas2d/results/test-observables-own-2/spectrum10.dat",
		"/home/nhrjr/projects/expandingvortexgas2d/results/test-observables-own-2/spectrum5.dat",
		"/home/nhrjr/projects/expandingvortexgas2d/results/test-observables-own-2/spectrum1.dat",
		"/home/nhrjr/projects/expandingvortexgas2d/resources/bh3movie.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/results/test-observables-4/exp2d_0_TS1e-05_C1_G256_256_1_N1000_U15_KL2_2_2Run1/spectrum/radial_avgs.dat",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/complexgrid.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/resources/mycudaread.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/bh3binaryfile.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/propagators/bh3cpupropagator.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/averageclass.h",
		"/home/nhrjr/projects/expandingvortexgas2d/resources/bh3myanalyzerun_thorge.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/gauss_random.h",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/gauss_random.cpp",
		"/home/nhrjr/.config/sublime-text-3/Packages/User/SublimeLinter.sublime-settings",
		"/home/nhrjr/projects/expandingvortexgas2d/build/run.cfg",
		"/home/nhrjr/.config/sublime-text-3/Packages/User/cmake.sublime-build",
		"/home/nhrjr/projects/cryptsync-read-only/src/CryptSync.cpp",
		"/home/nhrjr/projects/cryptsync-read-only/notes/Design.txt",
		"/home/nhrjr/projects/expandingvortexgas2d/resources/61vor.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/exp_RK4_tools.h",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/exp_RK4_tools.cpp",
		"/home/nhrjr/.config/gtk-3.0/settings.ini",
		"/home/nhrjr/.config/gtk-2.0/gtkfilechooser.ini",
		"/home/nhrjr/.config/sublime-text-3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/home/nhrjr/.config/sublime-text-3/Packages/C++11/C++11.sublime-settings",
		"/home/nhrjr/.config/sublime-text-3/Packages/SublimeLinter/Default (Linux).sublime-keymap",
		"/home/nhrjr/.config/sublime-text-3/Packages/C++11/messages/install.txt",
		"/home/nhrjr/projects/svn_gasenzer_11/Expansion2DVortexgas/Code_sample/PascalWeckesser/Expansion-19-Anti-Vortices.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/build/test_speed-icpc-Ofast/runspeed.txt",
		"/home/nhrjr/projects/expandingvortexgas2d/build/CMakeCache.txt",
		"/opt/intel/bin/compilervars.sh",
		"/home/nhrjr/projects/expandingvortexgas2d/build/test_speed-g++_Ofast/runtime.txt",
		"/opt/intel/ipp/bin/ippvars.sh",
		"/opt/intel/bin/compilervars..sh",
		"/opt/intel/composer_xe_2013_sp1.2.144/ipp/bin/ippvars.sh",
		"/opt/intel/bin/compilervars.csh",
		"/opt/intel/composer_xe_2013_sp1.2.144/ipp/bin/ippvars.",
		"/opt/intel/composer_xe_2013_sp1.2.144/ipp/bin/ippvars.csh",
		"/home/nhrjr/.config/awesome/zenburn.lua",
		"/home/nhrjr/.config/awesome/rc.3.5.lua",
		"/usr/share/awesome/lib/wibox/widget/base.lua",
		"/home/nhrjr/.config/awesome/vicious/init.lua",
		"/usr/share/awesome/lib/beautiful.lua",
		"/usr/share/awesome/lib/wibox/widget/imagebox.lua",
		"/usr/share/awesome/lib/gears/debug.lua",
		"/home/nhrjr/.config/awesome/rc.3.4_old.lua",
		"/home/nhrjr/.config/awesome/rc.lua.3.5",
		"/home/nhrjr/.bashrc",
		"/home/nhrjr/projects/expandingvortexgas2d/build/mainvector.dump",
		"/home/nhrjr/projects/expandingvortexgas2d/propagators/bh3cudapropagator.cu",
		"/home/nhrjr/projects/expandingvortexgas2d/build/Makefile",
		"/usr/local/include/mgl2/mgl.h",
		"/home/nhrjr/.config/KeePass/KeePass.config.xml",
		"/home/nhrjr/projects/expandingvortexgas2d/exp_utilities/vortexcoordinates.h",
		"/home/nhrjr/projects/expandingvortexgas2d/resources/offset_tracking.cpp",
		"/home/nhrjr/projects/svn_gasenzer_11/Expansion2DVortexgas/Code_sample/code_Andrews/61vor_fig_6.3.e/61vor.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/utilities/Makefile",
		"/home/nhrjr/projects/expandingvortexgas2d/build/runtests.sh",
		"/home/nhrjr/projects/expandingvortexgas2d/build/testtest.sh",
		"/home/nhrjr/projects/expandingvortexgas2d/bh3myanalyzerun_thorge.cpp",
		"/home/nhrjr/projects/expandingvortexgas2d/61vor.cpp",
		"/home/nhrjr/projects/61vor_fig_6.3.e/61vor.cpp",
		"/home/nhrjr/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/nhrjr/Documents/Koerpermasse.txt",
		"/home/nhrjr/.config/awesome/vicious/widgets/thermal.lua",
		"/home/nhrjr/.config/awesome/vicious/widgets/date.lua"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/home/nhrjr/projects/expandingvortexgas2d"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"opt.name",
			"EXP2D_propagators",
			"opt.name",
			"snapShotString",
			"cout",
			"opt",
			"ITP1",
			"tmpMatrix",
			"ysize",
			"xsize",
			"cout",
			"cerr",
			"checkTime",
			"H5Lexists",
			"cerr",
			"RTE",
			"#1",
			"h5_file",
			"SnapshotTimes",
			"time",
			"h5a_time",
			"H5Aexists",
			"get_address",
			"dataFile",
			"timelist",
			"dimsf",
			"h5_CGgroup",
			"get_options",
			"get_timelist",
			"get_file_list",
			"check_time",
			"k",
			"buf",
			"filestr",
			"Vortexnumber",
			"StepCounter",
			"KeeperOfTime",
			"NUMBER_OF_VORTICES",
			"laplacian_coefficient_x",
			"lambda_x",
			"exp_factor",
			"to_string(snapshot_time)",
			"snapshot_time",
			"80",
			"stateOfLoops",
			"m",
			"surroundDens",
			"findVort",
			"findVOrti",
			"*",
			"r_min",
			"r_max",
			"50",
			"zeroDensity",
			"density",
			"find_vortices",
			"find_vortic",
			"Surround",
			"opt",
			"  ",
			"r_max",
			"aspectRatio",
			"r_max",
			"80",
			"60",
			"ranges",
			"cout",
			"opt.min_y",
			"opt.min_x",
			"opt.min_y",
			"opt.min_x",
			"opt.min_y",
			"opt.min_x",
			"calc_fields",
			"cout",
			"minimumDensity",
			"calc_fields",
			"myException",
			"i",
			"getDens",
			"returnString",
			"addString",
			"INIT_BH3_H__",
			"exception",
			"throw",
			"sum",
			"wavefctVec[i]",
			"minimumDensity",
			"LOWER_THRESHOLD",
			"ZERO_THRESHOLD",
			"cli",
			"cli_plot",
			"max_radius",
			"zeros",
			"phase",
			"calc_field",
			"const",
			"lower_threshold",
			"zero_threshold",
			"numberOfVortices",
			"plotdatatopng",
			"Eval #",
			"Eval",
			"intial",
			"data",
			"PsiVec",
			"external_snapshot_time",
			"const",
			"data",
			"initial",
			"findInitialP",
			"const",
			"i ",
			"')\n",
			"sort",
			"dens_x",
			"opt.grid",
			"y_max",
			"x_max",
			",",
			"x_min",
			"Ekin",
			"cRatio",
			"cData1",
			"cData",
			"sampleindex",
			"iterator",
			"radius"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3437,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										185,
										193
									],
									[
										457,
										465
									],
									[
										675,
										683
									],
									[
										968,
										976
									],
									[
										1255,
										1263
									],
									[
										1471,
										1479
									],
									[
										1731,
										1739
									],
									[
										1935,
										1943
									],
									[
										2186,
										2194
									],
									[
										2325,
										2333
									],
									[
										2453,
										2461
									],
									[
										2623,
										2631
									],
									[
										2742,
										2750
									],
									[
										2962,
										2970
									],
									[
										3002,
										3010
									],
									[
										3132,
										3140
									],
									[
										3172,
										3180
									],
									[
										3306,
										3314
									],
									[
										3346,
										3354
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								1747,
								1747
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close"
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 315.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "exp_utilities/EXP2D_rte.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3410,
						"regions":
						{
						},
						"selection":
						[
							[
								508,
								508
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"syntax_mgr_loaded": true,
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 180.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "exp_utilities/EXP2D_rte.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21175,
						"regions":
						{
						},
						"selection":
						[
							[
								6176,
								6176
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"syntax_mgr_loaded": true,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1669.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "results/run.cfg",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 863,
						"regions":
						{
						},
						"selection":
						[
							[
								370,
								370
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"syntax_mgr_loaded": true,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "exp_utilities/EXP2D_binaryfile.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7699,
						"regions":
						{
						},
						"selection":
						[
							[
								5967,
								5967
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"syntax_mgr_loaded": true,
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 810.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "exp_utilities/EXP2D_binaryfile.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20567,
						"regions":
						{
						},
						"selection":
						[
							[
								5547,
								5547
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"syntax_mgr_loaded": true,
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8295.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5567,
						"regions":
						{
						},
						"selection":
						[
							[
								2070,
								2070
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"syntax_mgr_loaded": true,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 644.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "evaluator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2936,
						"regions":
						{
						},
						"selection":
						[
							[
								1478,
								1478
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"syntax_mgr_loaded": true,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 540.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "exp_utilities/EXP2D_evaluation.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22942,
						"regions":
						{
						},
						"selection":
						[
							[
								4348,
								4348
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"syntax_mgr_loaded": true,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1865.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "exp_utilities/EXP2D_Contour.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5662,
						"regions":
						{
						},
						"selection":
						[
							[
								4811,
								4811
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"syntax_mgr_loaded": true,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2535.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 322.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "expandingvortexgas2d.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/.config/awesome/awesome.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 278.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
